<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2016, Huawei Technologies Co., Ltd.
   
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
   
        http://www.apache.org/licenses/LICENSE-2.0
   
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/osgi
    http://www.springframework.org/schema/osgi/spring-osgi.xsd">

	<context:component-scan base-package="com.huawei.icto.commonsvc.decomposer" />

	<bean id="decomposerContextHelper"
		class="com.huawei.icto.commonsvc.decomposer.util.DecomposerContextHelper">
	</bean>

	<bean id="serviceDecomposerModule"
		class="com.huawei.icto.commonsvc.decomposer.module.ServiceDecomposerModule"
		init-method="start" destroy-method="stop">
		<property name="roaResList">
			<list>
				<ref bean="serviceDecomposerROAService" />
				<ref bean="serviceOperateROAService" />
			</list>
		</property>
	</bean>

	<osgi:reference id="mapperMgrRef"
		interface="org.openo.commonservice.mybatis.session.MapperManager" />

	<bean id="serviceDecomposerROAService"
		class="com.huawei.icto.commonsvc.decomposer.rest.nbi.ServiceDecomposerROAService">
		<property name="service" ref="srvDecomposerService" />
	</bean>

	<bean id="serviceOperateROAService"
		class="com.huawei.icto.commonsvc.decomposer.rest.nbi.ServiceOperateROAService">
		<property name="service" ref="srvOperateService" />
	</bean>
	
	
	<!--  调度配置    -->
	<bean id="scheduler"
		class="com.huawei.icto.commsvc.jobscheduler.core.impl.SchedulerImpl">
		<property name="jobDao" ref="jobDaoRef" />
		<property name="jobSerializer" ref="jobSerializerRef" />
		<property name="schedulerInstanceDao" ref="schedulerInstanceDaoRef" />
		<property name="poolSize" value="20"></property>
		<property name="refreshTimeCycle" value="30"></property>
		<property name="pollingDeadInsCycle" value="60"></property>
	</bean>
	<bean id="jobDaoRef" class="com.huawei.icto.commsvc.jobscheduler.dao.impl.JobDaoImpl">
		<property name="mapperManager" ref="mapperMgrRef" />
		<property name="jobContextDao" ref="jobContextDao" />
		<property name="dbName" value="servicedecomposerdb" />
	</bean>
	<bean id="jobContextDao" class="com.huawei.icto.commsvc.jobscheduler.dao.impl.JobContextDaoImpl">
		<property name="mapperManager" ref="mapperMgrRef" />
		<property name="dbName" value="servicedecomposerdb" />
	</bean>
	<bean id="jobSerializerRef"
		class="com.huawei.icto.commonsvc.jobscheduler.job.impl.JobSerializerImpl">
	</bean>
	<bean id="schedulerInstanceDaoRef"
		class="com.huawei.icto.commsvc.jobscheduler.dao.impl.SchedulerInstanceDaoImpl">
		<property name="mapperManager" ref="mapperMgrRef" />
		<property name="dbName" value="servicedecomposerdb" />
	</bean>

	<!--    事务管理器      -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<osgi:reference id="transactionManager" interface="org.springframework.transaction.PlatformTransactionManager"/> 

</beans>